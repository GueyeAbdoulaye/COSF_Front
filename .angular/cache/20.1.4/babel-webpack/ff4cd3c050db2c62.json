{"ast":null,"code":"import { ReactiveFormsModule, UntypedFormGroup, Validators } from \"@angular/forms\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../services/cosf.service\";\nimport * as i3 from \"@angular/material/form-field\";\nimport * as i4 from \"@angular/material/input\";\nimport * as i5 from \"@angular/material/button\";\nfunction ContactComponent_Conditional_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Le nom est requis\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ContactComponent_Conditional_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Le pr\\u00E9nom est requis\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ContactComponent_Conditional_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"L'email est requis\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ContactComponent_Conditional_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Format d'email invalide\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ContactComponent_Conditional_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Le message est requis\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let ContactComponent = /*#__PURE__*/(() => {\n  class ContactComponent {\n    fb;\n    service;\n    contactForm = new UntypedFormGroup({});\n    constructor(fb, service) {\n      this.fb = fb;\n      this.service = service;\n    }\n    ngOnInit() {\n      this.initForm();\n    }\n    initForm() {\n      this.contactForm = this.fb.group({\n        nom: [\"\", [Validators.required]],\n        prenom: [\"\", [Validators.required]],\n        email: [\"\", [Validators.required, Validators.email]],\n        message: [\"\", [Validators.required]]\n      });\n    }\n    onSubmit(formGroupDirective) {\n      if (this.contactForm.valid) {\n        this.service.sendContactForm(this.contactForm.value).subscribe({\n          next: response => {\n            alert(\"Message envoyé avec succès !\");\n            // Optionally reset the form or show a success message\n            formGroupDirective.resetForm(); // Reset the form group directive\n          },\n          error: error => {\n            alert(\"Une erreur est survenue lors de l'envoi.\");\n          }\n        });\n      } else {\n        console.log(\"Form is invalid\");\n      }\n    }\n    static ɵfac = function ContactComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ContactComponent)(i0.ɵɵdirectiveInject(i1.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.CosfService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ContactComponent,\n      selectors: [[\"app-contact\"]],\n      decls: 30,\n      vars: 7,\n      consts: [[\"formGroupDirective\", \"ngForm\"], [1, \"flex\", \"flex-col\", \"items-center\", \"justify-center\", \"w-full\", \"h-auto\", \"p-4\", \"sm:p-8\"], [1, \"text-2xl\", \"sm:text-3xl\", \"font-bold\", \"font-serif\", \"mb-6\", \"text-center\"], [1, \"w-full\", \"max-w-2xl\", \"space-y-4\", 3, \"ngSubmit\", \"formGroup\"], [1, \"flex\", \"flex-col\", \"sm:flex-row\", \"gap-4\"], [\"appearance\", \"fill\", 1, \"w-full\"], [\"matInput\", \"\", \"formControlName\", \"nom\"], [\"matInput\", \"\", \"formControlName\", \"prenom\"], [\"matInput\", \"\", \"type\", \"email\", \"formControlName\", \"email\"], [\"matInput\", \"\", \"formControlName\", \"message\", \"rows\", \"5\"], [1, \"flex\", \"justify-center\", \"mt-6\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 1, \"px-8\", \"py-2\", 3, \"disabled\"]],\n      template: function ContactComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"div\", 1)(1, \"h1\", 2);\n          i0.ɵɵtext(2, \" Nous Contacter \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 3, 0);\n          i0.ɵɵlistener(\"ngSubmit\", function ContactComponent_Template_form_ngSubmit_3_listener() {\n            i0.ɵɵrestoreView(_r1);\n            const formGroupDirective_r2 = i0.ɵɵreference(4);\n            return i0.ɵɵresetView(ctx.onSubmit(formGroupDirective_r2));\n          });\n          i0.ɵɵelementStart(5, \"div\", 4)(6, \"mat-form-field\", 5)(7, \"mat-label\");\n          i0.ɵɵtext(8, \"Nom\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(9, \"input\", 6);\n          i0.ɵɵconditionalCreate(10, ContactComponent_Conditional_10_Template, 2, 0, \"mat-error\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"mat-form-field\", 5)(12, \"mat-label\");\n          i0.ɵɵtext(13, \"Pr\\u00E9nom\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(14, \"input\", 7);\n          i0.ɵɵconditionalCreate(15, ContactComponent_Conditional_15_Template, 2, 0, \"mat-error\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(16, \"mat-form-field\", 5)(17, \"mat-label\");\n          i0.ɵɵtext(18, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(19, \"input\", 8);\n          i0.ɵɵconditionalCreate(20, ContactComponent_Conditional_20_Template, 2, 0, \"mat-error\");\n          i0.ɵɵconditionalCreate(21, ContactComponent_Conditional_21_Template, 2, 0, \"mat-error\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(22, \"mat-form-field\", 5)(23, \"mat-label\");\n          i0.ɵɵtext(24, \"Message\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(25, \"textarea\", 9);\n          i0.ɵɵconditionalCreate(26, ContactComponent_Conditional_26_Template, 2, 0, \"mat-error\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(27, \"div\", 10)(28, \"button\", 11);\n          i0.ɵɵtext(29, \" Envoyer le message \");\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          let tmp_2_0;\n          let tmp_3_0;\n          let tmp_4_0;\n          let tmp_5_0;\n          let tmp_6_0;\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"formGroup\", ctx.contactForm);\n          i0.ɵɵadvance(7);\n          i0.ɵɵconditional(((tmp_2_0 = ctx.contactForm.get(\"nom\")) == null ? null : tmp_2_0.hasError(\"required\")) ? 10 : -1);\n          i0.ɵɵadvance(5);\n          i0.ɵɵconditional(((tmp_3_0 = ctx.contactForm.get(\"prenom\")) == null ? null : tmp_3_0.hasError(\"required\")) ? 15 : -1);\n          i0.ɵɵadvance(5);\n          i0.ɵɵconditional(((tmp_4_0 = ctx.contactForm.get(\"email\")) == null ? null : tmp_4_0.hasError(\"required\")) ? 20 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵconditional(((tmp_5_0 = ctx.contactForm.get(\"email\")) == null ? null : tmp_5_0.hasError(\"email\")) ? 21 : -1);\n          i0.ɵɵadvance(5);\n          i0.ɵɵconditional(((tmp_6_0 = ctx.contactForm.get(\"message\")) == null ? null : tmp_6_0.hasError(\"required\")) ? 26 : -1);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", ctx.contactForm.invalid);\n        }\n      },\n      dependencies: [ReactiveFormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, MatFormFieldModule, i3.MatFormField, i3.MatLabel, i3.MatError, MatInputModule, i4.MatInput, MatButtonModule, i5.MatButton],\n      encapsulation: 2\n    });\n  }\n  return ContactComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}