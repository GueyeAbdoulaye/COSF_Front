{"ast":null,"code":"import { Validators, ReactiveFormsModule, UntypedFormGroup, FormControl } from \"@angular/forms\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { CommonModule } from \"@angular/common\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/icon\";\nfunction LoginComponent_Conditional_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"mat-error\");\n    i0.ɵɵtext(2, \"L'email est requis\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction LoginComponent_Conditional_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"mat-error\");\n    i0.ɵɵtext(2, \"Le mot de passe est requis\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    fb;\n    authService;\n    router;\n    route;\n    loginForm = new UntypedFormGroup({});\n    hidePassword = true;\n    returnUrl = \"/home\"; // valeur par défaut\n    constructor(fb, authService, router, route) {\n      this.fb = fb;\n      this.authService = authService;\n      this.router = router;\n      this.route = route;\n    }\n    ngOnInit() {\n      this.initForm();\n      // Lire le returnUrl depuis les query params\n      this.returnUrl = this.route.snapshot.queryParams[\"returnUrl\"] || \"/home\";\n      // Protection contre les redirections externes\n      if (!this.returnUrl.startsWith(\"/\")) {\n        this.returnUrl = \"/home\";\n      }\n    }\n    initForm() {\n      this.loginForm = this.fb.group({\n        email: new FormControl(\"\", [Validators.required, Validators.email]),\n        password: new FormControl(\"\", [Validators.required, Validators.minLength(8), Validators.maxLength(16)])\n      });\n    }\n    // Method to navigate to the register page\n    navigateToRegister() {\n      this.router.navigate([\"/register\"]); // Adjust the path if necessary\n    }\n    onSubmit(formGroupDirective) {\n      if (this.loginForm.valid) {\n        this.authService.login(this.loginForm).subscribe({\n          next: response => {\n            const token = response.token;\n            this.authService.saveToken(token);\n            // Rediriger vers la page initialement demandée\n            this.router.navigateByUrl(this.returnUrl);\n            formGroupDirective.resetForm();\n          },\n          error: error => {\n            alert(\"Login failed. Please try again.\");\n          }\n        });\n      } else {\n        console.log(\"Form is invalid\");\n      }\n    }\n    static ɵfac = function LoginComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 35,\n      vars: 6,\n      consts: [[\"formGroupDirective\", \"ngForm\"], [1, \"h-screen\", \"w-screen\", \"flex\", \"items-center\", \"justify-center\", \"inset-0\", \"bg-black\", \"bg-opacity-50\", \"z-40\"], [1, \"bg-white\", \"backdrop-blur-sm\", \"border\", \"border-white/20\", \"rounded-xl\", \"shadow-2xl\", \"p-8\", \"w-full\", \"max-w-md\", \"overflow-hidden\"], [1, \"text-center\", \"mb-8\"], [\"src\", \"/images/cosf_logo.jpeg\", \"alt\", \"COSF Logo\", 1, \"w-20\", \"h-20\", \"mx-auto\", \"mb-4\", \"rounded-full\"], [1, \"text-2xl\", \"font-bold\", \"text-gray-800\", \"font-serif\"], [1, \"text-gray-600\", \"mt-2\"], [1, \"space-y-6\", 3, \"ngSubmit\", \"formGroup\"], [1, \"w-full\"], [\"matInput\", \"\", \"type\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"exemple@gmail.com\"], [\"matSuffix\", \"\"], [\"matInput\", \"\", \"formControlName\", \"password\", \"placeholder\", \"\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\", \"autocomplete\", \"current-password\", 3, \"type\"], [\"mat-icon-button\", \"\", \"matSuffix\", \"\", \"type\", \"button\", 3, \"click\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 1, \"w-full\", \"!bg-green-700\", \"hover:!bg-green-800\", \"!text-white\", \"!font-semibold\", \"!py-3\", 3, \"disabled\"], [1, \"mr-2\"], [1, \"flex\", \"flex-row\", \"justify-evenly\", \"text-center\"], [1, \"text-green-600\", \"hover:text-green-800\", \"text-sm\", \"font-medium\"], [1, \"text-green-600\", \"hover:text-green-800\", \"text-sm\", \"font-medium\", \"cursor-pointer\", 3, \"click\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"div\", 3);\n          i0.ɵɵelement(3, \"img\", 4);\n          i0.ɵɵelementStart(4, \"h2\", 5);\n          i0.ɵɵtext(5, \"Connexion\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"p\", 6);\n          i0.ɵɵtext(7, \"Acc\\u00E9dez \\u00E0 votre espace COSF\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(8, \"form\", 7, 0);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_8_listener() {\n            i0.ɵɵrestoreView(_r1);\n            const formGroupDirective_r2 = i0.ɵɵreference(9);\n            return i0.ɵɵresetView(ctx.onSubmit(formGroupDirective_r2));\n          });\n          i0.ɵɵelementStart(10, \"mat-form-field\", 8)(11, \"mat-label\");\n          i0.ɵɵtext(12, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(13, \"input\", 9);\n          i0.ɵɵelementStart(14, \"mat-icon\", 10);\n          i0.ɵɵtext(15, \"email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵconditionalCreate(16, LoginComponent_Conditional_16_Template, 3, 0, \"div\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"mat-form-field\", 8)(18, \"mat-label\");\n          i0.ɵɵtext(19, \"Mot de passe\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(20, \"input\", 11);\n          i0.ɵɵelementStart(21, \"button\", 12);\n          i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_21_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.hidePassword = !ctx.hidePassword);\n          });\n          i0.ɵɵelementStart(22, \"mat-icon\");\n          i0.ɵɵtext(23);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵconditionalCreate(24, LoginComponent_Conditional_24_Template, 3, 0, \"div\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(25, \"button\", 13)(26, \"mat-icon\", 14);\n          i0.ɵɵtext(27, \"login\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(28, \" Se connecter \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(29, \"div\", 15)(30, \"div\", 16);\n          i0.ɵɵtext(31, \" Mot de passe oubli\\u00E9 ? \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(32, \"div\", 17);\n          i0.ɵɵlistener(\"click\", function LoginComponent_Template_div_click_32_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.navigateToRegister());\n          });\n          i0.ɵɵtext(33, \" Cr\\u00E9er un compte \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(34, \"div\");\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          let tmp_2_0;\n          let tmp_5_0;\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n          i0.ɵɵadvance(8);\n          i0.ɵɵconditional(((tmp_2_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_2_0.hasError(\"required\")) ? 16 : -1);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"type\", ctx.hidePassword ? \"password\" : \"text\");\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate(ctx.hidePassword ? \"visibility_off\" : \"visibility\");\n          i0.ɵɵadvance();\n          i0.ɵɵconditional(((tmp_5_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_5_0.hasError(\"required\")) ? 24 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n        }\n      },\n      dependencies: [CommonModule, ReactiveFormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, MatFormFieldModule, i4.MatFormField, i4.MatLabel, i4.MatError, i4.MatSuffix, MatInputModule, i5.MatInput, MatButtonModule, i6.MatButton, i6.MatIconButton, MatIconModule, i7.MatIcon, MatCheckboxModule],\n      encapsulation: 2\n    });\n  }\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}