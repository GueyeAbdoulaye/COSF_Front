{"ast":null,"code":"import { AuthService } from \"../../services/auth.service\";\nimport { inject } from \"@angular/core\";\n// Créez un interceptor fonctionnel\n// jwt-interceptor.ts (Angular v16+)\nexport const jwtInterceptor = (req, next) => {\n  const authService = inject(AuthService);\n  const token = authService.getToken(); // ex: localStorage.getItem('access_token')\n  const isUsable = token !== null && token !== undefined && token !== 'null' && token !== 'undefined' && String(token).trim() !== '' && !isExpired(token); // <-- optionnel mais conseillé\n  if (isUsable) {\n    req = req.clone({\n      setHeaders: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  }\n  return next(req);\n};\n// petit helper sans dépendance externe\nfunction isExpired(jwt) {\n  try {\n    const payload = JSON.parse(atob(jwt.split('.')[1]));\n    if (!payload?.exp) return false;\n    const nowSec = Math.floor(Date.now() / 1000);\n    return payload.exp <= nowSec;\n  } catch {\n    return true;\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}