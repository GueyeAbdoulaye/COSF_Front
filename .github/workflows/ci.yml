name: COSF

on:
  push:
    branches:
      - develop
      - main
  workflow_dispatch:

jobs:
  setup-docker-tag:
    runs-on: ubuntu-latest
    outputs:
      docker_tag: ${{ steps.set-tag.outputs.tag }}
    steps:
      - name: Définir le tag Docker en fonction de la branche
        id: set-tag
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "tag=prod" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
            echo "tag=pre-prod" >> $GITHUB_OUTPUT
          else
            echo "tag=pre-prod" >> $GITHUB_OUTPUT
          fi

  build-and-deploy-image:
    needs: setup-docker-tag
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout du dépôt
        uses: actions/checkout@v4

      - name: Connexion à GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Activer Buildx
        uses: docker/setup-buildx-action@v3

      - name: Valider le tag généré
        run: |
          TAG="${{ needs.setup-docker-tag.outputs.docker_tag }}"
          if [[ ! "$TAG" =~ ^[a-zA-Z0-9_.-]+$ ]]; then
            echo "Invalid tag format: $TAG"
            exit 1
          fi

      - name: Construire et pousser l'image Docker (avec cache)
        uses: docker/build-push-action@v5
        env:
          # logs plus verbeux pendant le build
          BUILDKIT_PROGRESS: plain
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64/v8
          tags: ghcr.io/gueyeabdoulaye/cosf_front:${{ needs.setup-docker-tag.outputs.docker_tag }}
          # --- cache buildx ---
          cache-from: type=registry,ref=ghcr.io/gueyeabdoulaye/cosf_front:buildcache
          cache-to: type=registry,ref=ghcr.io/gueyeabdoulaye/cosf_front:buildcache,mode=max
