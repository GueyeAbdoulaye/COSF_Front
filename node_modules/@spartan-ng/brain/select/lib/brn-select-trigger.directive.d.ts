import { type AfterViewInit, OnDestroy, OnInit } from '@angular/core';
import { NgControl } from '@angular/forms';
import * as i0 from "@angular/core";
export declare class BrnSelectTriggerDirective<T> implements AfterViewInit, OnDestroy, OnInit {
    private readonly _elementRef;
    /** Access the change detector */
    private readonly _changeDetector;
    protected readonly _select: import("@spartan-ng/brain/select").BrnSelectComponent<T>;
    protected readonly _ngControl: NgControl | null;
    private readonly _platform;
    protected readonly _triggerId: import("@angular/core").Signal<string>;
    protected readonly _contentId: import("@angular/core").Signal<string>;
    protected readonly _disabled: import("@angular/core").Signal<boolean>;
    protected readonly _labelledBy: import("@angular/core").Signal<string | import("@angular/core").InputSignal<string>>;
    private _resizeObserver?;
    private _statusChangedSubscription?;
    constructor();
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    focus(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<BrnSelectTriggerDirective<any>, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<BrnSelectTriggerDirective<any>, "[brnSelectTrigger]", never, {}, {}, never, never, true, never>;
}
